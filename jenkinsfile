pipeline {
  agent any
  environment {
    CI = 'true'
    HOME = '.'
    BRANCH_NAME = "${env.gitlabSourceBranch}"
  }
  stages {
    stage('Test and Build') {
      agent {
        docker {
          image 'node:12.4'
          reuseNode true
        }
      }
      stages {
        stage('Setup') {
          steps {
            echo "gitlab source branch name: ${env.gitlabSourceBranch}"
            echo "branch name: ${env.BRANCH_NAME}"
            setup()
          }
        }

        stage('Build Dev') {
          steps {
            build()
          }
        }
      }
    }

    stage('Deploy') {
      steps {
        dockerify()
      }
    }
  }
}

themeConfig = [
  'default': [
    'dev': 'pmax-dev.tenmax.io'
  ],
  'kang': [
    'dev': 'dev-kang2.adnetworkdigital.com'
  ],
  'tsp': [
    'dev': 'dev-tsp2.adnetworkdigital.com'
  ]
]

def setup() {
  echo 'install dependencies'
}

def build() {
  echo "build"
  themeConfig.each { key, val ->
    echo "stash: $key, value ${val['dev']} start"
    sh "cp custom/$key/test.json public/test.json"
    stash includes: 'public/*', name: "distribution-$key"
    echo "stash: $key, value ${val['dev']} end"
  }
}

def dockerify() {
  echo "dockerify"
  themeConfig.each { key, val ->
    unstash "distribution-$key"
    echo 'check the public json with correct server URL'
    sh 'grep -r -o ":.*.tenmax.io" public/test.json'
  }
}
